[{"id":"5b3eb47b7d0e99000457ffa6","name":"ANZSIC code search","description":"Search for ANZSIC codes by business activities like 'banking', 'fishing', 'housepainting', etc.","pages":["# Getting Started\n\nThe ANZSIC coder REST API lets you search for ANZSIC codes by business activities such as '**banking**', '**fishing**', '**house painting**', etc.\n\n\n\n## Key Information\n\n\n\n### Base URL\n\nThis service only responds to a single `GET` method:\n\n> https://industrycoder.abs.gov.au/pocc\n\nThe ANZSIC coder service is only available over HTTPS.\n\n### Response Format\n\nResponses are in JSON\n\n### Authentication\n\nThis is a public and unauthenticated service.\n\n","# Using the API\n\n\n\n## Request encoding\n\nWe protect this service with a Web Application Firewall, which will reject requests with unencoded special characters.\n\nPlease apply appropriate URL encoding to your requests. For more information, please see this [W3C article on URL encoding](https://www.w3schools.com/Tags/ref_urlencode.asp)\n\n","# Search\n\nThe search service is available at this URL:\n\n> https://industrycoder.abs.gov.au/pocc\n\nThe service takes a single parameter `s` which is a string containing your search terms separated by spaces.\n\nThe service will return an array of JSON objects, ordered by relevance and limited to 20 results.\n\n| Field | Description |\n| --- | --- |\n| code | The 5-digit ANZSIC category code | \n| parsedText | Unparsed text modified to allow efficient searching. This is what the query terms have been searched against |\n| unparsedText | The natural language description of the ANZSIC category | \n| score | Weighted closeness score, a decimal value between 0 and 10 |\n| rank | Integer closeness ranking within the results | \n\n\n## Example code\n\nHere is a basic example webpage that uses AJAX to query the service and display the results.\n\nNote that in this example, on the the 'code' and 'unparsedText' fields are displayed.\n\n```html\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>PoCC Search</title>\n</head>\n<body>\n    <div>\n        <h2>Search for a Classification</h2>\n        <input type=\"text\" id=\"search\" size=\"20\" />\n        <input type=\"button\" id=\"searchButton\" value=\"Search\" onclick=\"find();\" />\n        <ol id=\"results\" />\n    </div>\n    <script src=\"https://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.0.3.min.js\"></script>\n    <script>\n        var uri = 'https://industrycoder.abs.gov.au/pocc?s=';\n    function formatItem(item) {\n            return item.code + \": \" + item.unparsedText;\n    }\n    function find() {\n      var id = $('#search').val();\n      $.getJSON(uri + id)\n          .done(function (data) {\n              $('#results').text(''); //clear previous search results\n              $.each(data, function (key, item) {\n                  $('<li>', { text : formatItem(item) }).appendTo($('#results'));\n              });\n          })\n          .fail(function (jqXHR, textStatus, err) {\n            window.alert('Error: ' + err);\n          });\n    }\n    </script>\n    <script>\n        $('#search').keyup(function(event) {\n            if (event.keyCode === 13) {\n                $('#searchButton').click();\n            }\n        });\n    </script>\n</body>\n</html>\n```\n\n"]},{"id":"5b3eb4917d0e99000457ffa8","name":"Debt Agreements Service","description":"A service that allows practitioners to propose a debt agreement, and any subsequent variations and/or terminations to the agreement. Creditors can submit claim and votes on these proposals","pages":["# Getting Started\n\nDebt agreements is a SOAP/XML web service allows practitioners to propose a debt agreement (DA), and any subsequent variations and/or termination to the agreement.  This service allows creditors to vote on these proposals and additionally allows both practitioners and creditors to retrieve relevant correspondence.\n\n","# Business Context\n\nA debt agreement (DA) is an option to assist debtors with unmanageable debt.  The DA is a legally binding agreement between a debtor and their creditors where creditors agree to accept a sum of money that the debtor can afford.  The debtor is released from their debts when they complete all payments and obligations under the agreement.  Creditors vote on whether to accept or reject a DA proposal.\n\n\n\n","# Operations\n\n- SearchCreditors\n- GetCreditor\n- CreateCreditor\n- GetDocuments\n- SubmitDebtAgreementProposal\n- SearchCorrespondence\n- GetCorrespondence\n- SubmitDebtAgreementVariation\n- SubmitDebtAgreementTermination\n- SubmitDebtAgreementCompletion\n- SubmitDebtAgreementDefault\n\nThe business processes and operations are further described in the [Debt Agreements Service Practitioners MIG](/artefacts/MIG-DAServicePractitioners_v1.2.pdf)\n \n\n## Operations for Creditors\n- SearchCorrespondence\n- GetCorrespondence\n- GetDebtAgreementProposalCreditor\n- SubmitDebtAgreementClaimAndVote\n- GetDocuments\n\nThe Debt Agreements Service Creditors MIG is coming soon\n\n","# Fees\n\nFor practitioners there is a [fee](https://www.afsa.gov.au/insolvency/how-we-can-help/fees-and-charges-0) for proposing a DA, but not for lodgement of subsequent DA forms or retrieval of correspondence.\n\n \n\nFor creditors, no fees apply to using this any operations in this service.\n\n","# Authentication\n\nA device AUSkey is required for authentication of DA Service operation requests, see the [AFSA Web Services Gateway Guide](https://www.afsa.gov.au/sites/g/files/net1601/f/itsa-web-service-gateway-guide.pdf) for more information.\n\n"]},{"id":"5b3eb4a47d0e99000457ffaa","name":"Superannuation Dashboard","description":"The Superannuation Dashboard API will let you find out information about the status of the Superannuation supporting services.","pages":["# Getting Started\n\nThe Superannuation Dashboard API will let you find out information about the status of the Superannuation supporting services.\n\n## Key Information\n\n\n\n### Base URL\n\nAll URLs referenced in this documentation have the follwoing base:\n\n> http://sses.status.ato.gov.au/api_get/\n\n\n\n### Response Format\n\nResponses are in JSON\n\n\n## OpenAPI Specification\n\nThe OpenAPI / Swagger documentation for the API is [here](/swagger-ui/index.html?url=https://services.ausdx.io/swagger/superannuation-dashboard.yaml)\n\nHere's an automatically generated class diagram of the service.\n\n[![Generated class diagram from swagger](https://graph.ausdx.io/swagger.svg?url=https://services.ausdx.io/swagger/superannuation-dashboard.yaml)](https://graph.ausdx.io/swagger.svg?url=https://services.ausdx.io/swagger/superannuation-dashboard.yaml)\n\nClick for bigger version\n\n## Authentication\n\nThere is no authentication\n\n","# Using the API\n\n\n\n## Epoch Time\n\nAll times and dates in this API are output in epoch time format.\n\nEpoch time (also known as POSIX time or Unix time) is a system for describing instants in time, defined as the number of seconds that have elapsed since 00:00:00 Coordinated Universal Time (UTC), Thursday, 1 January 1970, not counting leap seconds.\n\nIt is valuable for developers as it automatically incorporates daylight savings time and time zones. \n\nThere are several functions in most programming languages for converting epoch time into a human readable format.\n\nFor more information on epoch time please visit [wikipedia](https://en.wikipedia.org/wiki/Unix_time) \n\n","# Planned Outages\n\nThe current planned outages are available at this URL\n\n> http://sses.status.ato.gov.au/api_get/plannedOutage \n\nHere is an example output from the plannedOutage service:\n\n```json\n{\n  \"preview\": false,\n  \"init_offset\": 0,\n  \"messages\": [\n    \n  ],\n  \"fields\": [\n    \"all_services\",\n    \"end_date\",\n    \"message\",\n    \"start_date\"\n  ],\n  \"rows\": [\n    [\n      \"SuperTICK1\",\n      \"SuperTICK2\",\n      \"SuperTICK3\",\n      \"SuperMATCH2\",\n      \"EmployerTICK\",\n      \"SuperMATCH\",\n      \"FVS\",\n      \"EPF\"\n    ],\n    \"1482127200\",\n    \"Services may become available sooner(from 12 / 02 / 2017 3: 50 am onwards)\",\n    \"1482105720\"\n  ]\n}\n```\n\n\n## Fields\n\n\nHere are the response fields, and what they mean:\n\n| Filed        | Description           | Sample  |\n| ------------- |-------------| -----|\n| all_services | Lists all the services that are currently undergoing a planned outage. | <ul><li>SuperTick1</li><li>SuperTick2</li><li>SuperTick3</li><li>SuperMatch2</li></ul>  The following services are not available <ul><li>EmployerTick</li><li>SuperMatch</li><li>FVS</li><li>EPF</li></ul> |\n| end_date | The end date of the planned outage in epoch time | 1482127200 |\n| message | \tThe message that accompanies the planned outage | Services may become available sooner (from 12/02/2017 3:50 am onwards) |\n| start_date | The start date of the planned outage, in epoch time | 1482105720 |\n\n\n## Multiple outages\n\nMultiple outages look like this:\n\n```json\n{\n  \"preview\": false,\n  \"init_offset\": 0,\n  \"messages\": [\n    \n  ],\n  \"fields\": [\n    \"all_services\",\n    \"end_date\",\n    \"message\",\n    \"start_date\"\n  ],\n  \"rows\": [\n    [\n      [\n        \"SuperTICK1\",\n        \"SuperTICK2\",\n        \"SuperTICK3\",\n        \"SuperMATCH2\",\n        \"EmployerTICK\",\n        \"SuperMATCH\",\n        \"FVS\",\n        \"EPF\"\n      ],\n      \"1482127200\",\n      \"planned outagetest\",\n      \"1482105840\"\n    ],\n    [\n      [\n        \"SuperTICK1\",\n        \"SuperTICK2\",\n        \"SuperTICK3\",\n        \"SuperMATCH2\",\n        \"EmployerTICK\",\n        \"SuperMATCH\",\n        \"FVS\",\n        \"EPF\"\n      ],\n      \"1482127200\",\n      \"testing\",\n      \"1482124740\"\n    ]\n  ]\n}\n```\n\n## No outages\n\nWhen no outages exist, the response will look like this:\n\n```json\n{\n  \"preview\": false,\n  \"init_offset\": 0,\n  \"post_process_count\": 0,\n  \"messages\": [],\n  \"fields\": [],\n  \"rows\": []\n}\n```\n\n","# Announcements\n\nAnnouncements are available at this URL\n\n> http://sses.status.ato.gov.au/api_get/announcement \n\nHere is an example output from the announcement service:\n\n```json\n{\n\t\"preview\": false,\n\t\"init_offset\": 0,\n\t\"messages\": [],\n\t\"fields\": [\"datePosted\", \"message\", \"title\"],\n\t\"rows\": [\n\t\t[\"1482066000\", \"Drive safely\", \"Happy Holidays\"]\n\t]\n}\n```\n\n\n## Fields\n\nHere are the fields used in the announcements service:\n\n\n| Filed        | Description           | Sample  |\n| ------------- |-------------| -----|\n| datePosted | The date that the announcement was posted, in epoch time | 1482127200 |\n| message | The message that accompanies the announcement | Drive Safely |\n| title | The title of the announcement | Happy Holidays |\n\n\n## Multiple announcements\n\nMultiple announcements look like this:\n\n```json\n{\n\t\"preview\": false,\n\t\"init_offset\": 0,\n\t\"messages\": [],\n\t\"fields\": [\"datePosted\", \"message\", \"title\"],\n\t\"rows\": [\n\t\t[\"1482112020\", \"Drive safely\", \"Happy Holidays\"],\n\t\t[\"1482124200\", \"Enjoy the break\", \"Happy New Year\"]\n\t]\n}\n```\n\n## No announcements\n\nNo announcements look like this:\n\n```json\n{\n\t\"preview\": false,\n\t\"init_offset\": 0,\n\t\"post_process_count\": 0,\n\t\"messages\": [],\n\t\"fields\": [],\n\t\"rows\": []\n}\n```\n\n","# Current Service Status\n\nCurrent services status is available at this URL\n\n> http://sses.status.ato.gov.au/api_get/currentStatus\n\nHere is an example output:\n\n\n```json\n{\n\t\"preview\": false,\n\t\"init_offset\": 0,\n\t\"messages\": [],\n\t\"fields\": [\"Service_Name\", \"Status\", \"time\"],\n\t\"rows\": [\n\t\t[\"SuperMATCH2\", \"Operational\", \"1486610400\"],\n\t\t[\"SuperTICK1\", \"Operational\", \"1486610400\"],\n\t\t[\"SuperTICK2\", \"Operational\", \"1486610400\"],\n\t\t[\"SuperTICK3\", \"Operational\", \"1486610400\"]\n\t]\n}\n```\n\n\n## Fields\n\nHere are the response fields, and what they mean:\n\n| Filed        | Description           | Sample  |\n| ------------- |-------------| -----|\n| service_name | Specifies the services for which status is available | <ul><li>SuperTick1</li><li>SuperTick2</li><li>SuperTick3</li><li>SuperMatch2</li></ul> |\n| status | Specifies the current status of the service | Operational |\n| time | The current epoch time for the service's status | 1482105720 |\n\n\n## No Status\n\nWhen there are no statuses available, the response will look like this:\n\n```json\n{\n\t\"preview\": false,\n\t\"init_offset\": 0,\n\t\"post_process_count\": 0,\n\t\"messages\": [],\n\t\"fields\": [],\n\t\"rows\": []\n}\n```\n\n"]},{"id":"5b3eb4857d0e99000457ffa7","name":"Manage Digital Capability Locator participants","description":"This service allows capability publishers to manage their registered participants","pages":["# Getting Started\nThe [Digital Business Council](http://digitalbusinesscouncil.com.au) publishes a set of specification to enable electronic exchange of digital business documents. One of the specifications relates to the [Digital Capability Locator](http://digitalbusinesscouncil.com.au/digital-capability-locator/) (DCL), a central component to enable dynamic discovery of business' endpoints.\n\nThe DCL consists of two major components:\n\n1. A way for anyone connected to the internet to find the location of a Digital Capability Publisher for a business, this is the [Discovery API](Discovery&#32;API); and\n2. A database of trusted services providers operating in the framework.","# Discovery API\nThe Digital Capability Locator implements the [OASIS Business Document Metadata Service Location](http://docs.oasis-open.org/bdxr/BDX-Location/v1.0/BDX-Location-v1.0.html) standard. The standard describes the use of DNS to find the location of a business' [Digital Capability Publisher](http://digitalbusinesscouncil.com.au/digital-capability-publisher/).","# Management API\nThe Digital Capability Locator Participants API will let you create and delete publisher relationships.\nThe OpenAPI / Swagger documentation for the API is [here](/swagger-ui/index.html?url=https://services.ausdx.io/swagger/dbc-capability-publisher.yaml)\n\n[![Generated class diagram from swagger](https://graph.ausdx.io/swagger.svg?url=https://services.ausdx.io/swagger/dbc-capability-publisher.yaml)](https://graph.ausdx.io/swagger.svg?url=https://services.ausdx.io/swagger/dbc-capability-publisher.yaml)\n\nClick for bigger version\n## Adding a business relationship\n## Removing a business relationship\n\n\n","# Search API\nThe OpenAPI / Swagger documentation for the API is\n## Retrieving access point records\n## Retrieving digital capability publisher records\n\n","# Authentication\nUsage of the DCL API is restricted to approved service providers only. Mutual exchange of TLS certificates governs access to the API. Service providers are encouraged to register with the Digital Capability Locator and store their public server and clients certificates in the DCL Service Provider database.\n\nOnce registered, service providers have the ability to update their own certificates through the management API."]},{"id":"5b3eb49c7d0e99000457ffa9","name":"National Personal Insolvency Index Search","description":"Search the National Personal Insolvency Index to see if a debtor is currently, or has been, subject to the Bankruptcy ACT 1966","pages":["# Getting Started\n\nThe National Personal Insolvency Index (NPII) Search is a SOAP/XML web service that for a fee, anyone may conduct a search of to determine whether a debtor is currently, or has previously been, subject to provisions of the Bankruptcy Act 1966. \n\n\n## Business Context\nThe NPII is a permanent electronic register of personal insolvency proceedings in Australia maintained and updated by the Australian Financial Security Authority.  The NPII contains records from August 1928.\n\nThe purpose of the NPII is to provide publicly available information regarding the insolvency status of individuals. \n\n\nThe NPII contains details of:\n- Creditors Petitions\n- Debt Agreements\n- Personal Insolvency Agreements\n- Bankruptcies\n- Insolvent Deceased Estates\n- Control Orders and Authorities\n\nThe information available includes:\n\n - The name, date of birth (if known), address (suburb/state) and occupation of the person as disclosed on documents accepted by AFSA when the proceeding started\n- Previous names and aliases if known\n- The type of proceeding, the date it started and the administration number\n- The name and business address of the trustee or administrator of the proceeding\n- The current status of the person and/or the proceeding (e.g. whether a person is discharged from bankruptcy or whether a Creditors Petition for a person’s bankruptcy is in progress).\n\n## Key Information\n\nThe NPII service is accessible using SOAP and uses XML for the message payload.\n\n## Fees\n\nThe fees charged for NPII Search usage are [here](https://www.afsa.gov.au/insolvency/how-we-can-help/fees-and-charges-0#service-fees).\n\n\nAn organisation must become an ‘On Account’ customer with AFSA in order for usage of the service to be billed to the organisation accessing the service.  The organisation must additionally complete the B2G channel [registration process](https://www.afsa.gov.au/online-services/b2g-system-integration/afsa-b2g-registration-steps).\n\n","# Authentication\n\nA device AUSkey is required for authentication of NPII Search operation requests, see the [AFSA Web Services Gateway Guide](https://www.afsa.gov.au/sites/g/files/net1601/f/itsa-web-service-gateway-guide.pdf) for more information.\n\n","# Using the API\n\nThe operations in this service are described in the [NPII Search MIG](https://www.afsa.gov.au/sites/g/files/net1601/f/mig-npiisearch_v1.4.20150429.pdf) on the AFSA website.\n\n"]},{"id":"5b3eb4707d0e99000457ffa5","name":"Definitions Catalogue","description":"The Definitions Catalogue REST API allows you to search and browse for data definitions used by the Australian Government","pages":["# Getting Started\n\n\nThe Definitions Catalogue REST API allows you to search and browse for data definitions used by the Australian Government.\n\n\n## Key Information\n\n\n\n### Base URL\n\n\nAll URLs referenced in the documentation have the following base:\n\n>https://definitions.ausdx.io/api/\n\nThe Definitions Catalogue API is served over both HTTP and HTTPS.\n\n\n### Response Format\n\nResponses are in JSON\n\n\n## OpenAPI specification\n\n\nThe OpenAPI / Swagger documentation for the API is [here](/swagger-ui/index.html?url=https://definitions.ausdx.io/swagger.json)\n\nHere's an automatically generated class diagram of the service.\n\n[![Generated class diagram from swagger](https://graph.ausdx.io/swagger.svg?url=https://definitions.ausdx.io/swagger.json)](https://graph.ausdx.io/swagger.svg?url=https://definitions.ausdx.io/swagger.json)\n\nClick for bigger version\n\n\nWe try to keep it up to date, but the documentation you're reading is you're best bet and understanding the API.\n\n## Authentication\n\n\nThis API is 100% public.\n\nThere is no Authentication\n\n\n","# Using the API\n\n\n\n## HATEOS\n\n\nMost of the resources returned the API follow the HATEOS approach: links are provided to help you navigate around.\n\nThis API uses HATEOS for things like:\n- paging\n- getting specific details about defintions\n\nHATEOS in this API follows this general pattern:\n\n```json\n{\n    \"content\": { ... the resource data ...},\n    \"links\": [\n        {\n            \"rel\": \"a_name_for_the_link\",\n           \"href\": \"a_link_to_related_things\"\n         },\n         ... more rels/hrefs ...\n    ]\n}\n```\n\n\n\n## Paging\n\nThis API pages results.\n\nThe `page` query parameter selects which result page to return.\n\nThe `size` query parameter specifies how many results per page to return. The default is 20 and the maximum is 100\n\nA page of results give you helpful information about navigating the other result pages.\n\nResult pages look like this:\n\n```json\n{\n  \"content\": [\n\t... the result page data ...\n  ],\n  \"numberOfElements\": 123,\n  \"firstPage\": true,\n  \"lastPage\": false,\n  \"totalPages\": 7,\n  \"links\": [\n    {\n      \"rel\": \"first\",\n      \"href\": \"http:/ausdx.io/api/search?query=car&page=1&size=20\"\n    },\n    {\n      \"rel\": \"last\",\n      \"href\": \"http:/ausdx.io/api/search?query=car&page=7&size=20\"\n    },\n    {\n      \"rel\": \"self\",\n      \"href\": \"http://ausdx.io/api/search?query=car&page=1&size=20\"\n    },\n    {\n      \"rel\": \"next\",\n      \"href\": \"http//:ausdx.io/api/search?query=car&page=2&size=20\"\n    }\n  ],\n  \"id\": {\n    \"rel\": \"self\",\n    \"href\": \"http://ausdx.io/api/search?query=car&page=1&size=20\"\n  }\n}\n```\n\n\n## The web version\n\n\nThere is a [web version of the catalogue](https://definitions.ausdx.io) that mirrors the functionality of this API.\n\nIn general, the API uri's follow the same pattern as the web ones but with the '/api/' path segment removed.\n\nFor example:\n\n- [http://definitions.ausdx.io/definition/other/de55](http://definitions.ausdx.io/definition/other/de55) <-- the web version\n- [http://definitions.ausdx.io/api/definition/other/de55](http://definitions.ausdx.io/api/definition/other/de55) <-- the api version\n\nSo to get an easy head start on what you can do wit the API, head over to the web version and take a look.\n\n\n## Rate Limiting\n\n\nAt the moment there is no imposed rate limiting.\n\nWe'll monitor the service and impose limiting if it has trouble keeping up.\n\n\n","# Search\n\nThe search service is available at this URL\n\n>https://definitions.ausdx.io/api/search\n\nIn addition to the [paging](Using+the+API#Paging) parameters, search uses the following:\n\nThe `query` query parameter specifies the query to search on.\n\nThe `domain` query parameter specifies a domain to restrict the search to. If you don't provide a value for `domain`, the definitons from all domains will be searched.\n\nMore information about domains, and the values the parameter takes is [here](Domains).\n\nThe response from the search, including the [HATEOS](Getting+Started#HATEOS) wrapper, service looks like this:\n\n> http://definitions.ausdx.io/api/search?query=de10\n\n```json\n{\n  \"content\": [\n    {\n      \"content\": {\n        \"name\": \"Electronic Contact Facsimile Area Code\",\n        \"domain\": \"Other\",\n        \"status\": \"Standard\",\n        \"definition\": \"This element describes a standard Australian Area Code as used in conjunction with facsimile numbers.\",\n        \"guidance\": \"\",\n\t\"identifier\": \"http://dxa.gov.au/definition/other/de10\",\n\t\"usage\": [\n          \"Australian Taxation Office\",\n          \"NSW Office of Revenue\",\n          \"SA Office of Revenue\",\n          \"VIC Office of Revenue\"\n        ],\n        \"type\": \"string\",\n        \"values\": [\n          \n        ],\n        \"facets\": {\n          \"pattern\": \"[0-9]{2}\"\n        }\n      },\n      \"links\": [\n        {\n          \"rel\": \"syntax\",\n          \"href\": \"http://ausdx.io/api/syntax/other/de10\"\n        }\n      ]\n    }\n  ],\n  \"numberOfElements\": 1,\n  \"firstPage\": true,\n  \"lastPage\": true,\n  \"totalPages\": 1,\n  \"links\": [\n    {\n      \"rel\": \"first\",\n      \"href\": \"http://definitions.ausdx.io/api/search?query=de10&page=1&size=20\"\n    },\n    {\n      \"rel\": \"last\",\n      \"href\": \"http://definitions.ausdx.io/api/search?query=de10&page=1&size=20\"\n    },\n    {\n      \"rel\": \"self\",\n      \"href\": \"http://definitions.ausdx.io/api/search?query=de10&page=1&size=20\"\n    }\n  ],\n  \"id\": {\n    \"rel\": \"self\",\n    \"href\": \"http://definitions.ausdx.io/api/search?query=de10&page=1&size=20\"\n  }\n}\n```\n\n## Examples\n\n\nHere is an example call that searches for the words 'motor vehicle' in all domains:\n\n```json\nhttp://definitions.ausdx.io/api/search?query=motor+vehicle\n```\n\nAnd and example speficying a domain:\n```json\nhttp://http://definitions.ausdx.io/api/search?query=motor+vehicle&domain=fs\n```\n\nAnd an example with paging\n\n```json\nhttp://definitions.ausdx.io/api/search?query=motor+vehicle&domain=fs&page=1&size=20\n```\n\n## Synonyms\n\nWe will include any results that have [synonyms](http://definitions.ausdx.io/synonyms) from your search query.\n\nWe want to make the synonym list better, so contact us if you have updates.\n\n","# Browse\n\nThe base URL for the browse service is:\n\n>http://definitions.ausdx.io/api/definitions\n\n\nIn addition to the [paging](Using+the+API#Paging) parameters, search uses the following:\n\nThe `domain` query parameter specifies a domain to browse within.\n\nIf you don't provide a value for `domain`, the definitons from all domains will be browsed.\n\nMore information about domains, and the values the parameter takes is [here](Domains).\n\n\n## Examples\n\nHere is an example result from the browse service, including the [HATEOS](Getting+Started#HATEOS) wrapper:\n\n>http://definitions.ausdx.io/api/definitions?domain=fi&page=1&size=1\n\n```json\n{\n  \"content\": [\n    {\n      \"content\": {\n        \"name\": \"Electronic Contact Facsimile Area Code\",\n        \"domain\": \"Other\",\n        \"status\": \"Standard\",\n        \"definition\": \"This element describes a standard Australian Area Code as used in conjunction with facsimile numbers.\",\n        \"guidance\": \"\",\n        \"identifier\": \"http://dxa.gov.au/definition/other/de10\",\n        \"usage\": [\n          \"Australian Taxation Office\",\n          \"NSW Office of Revenue\",\n          \"SA Office of Revenue\",\n          \"VIC Office of Revenue\"\n        ],\n        \"type\": \"string\",\n        \"values\": [\n          \n        ],\n        \"facets\": {\n          \"pattern\": \"[0-9]{2}\"\n        }\n      },\n      \"links\": [\n        {\n          \"rel\": \"syntax\",\n          \"href\": \"http://ausdx.io/api/syntax/other/de10\"\n        }\n      ]\n    }\n  ],\n  \"numberOfElements\": 6338,\n  \"firstPage\": true,\n  \"lastPage\": false,\n  \"totalPages\": 6338,\n  \"links\": [\n    {\n      \"rel\": \"first\",\n      \"href\": \"http://definitions.ausdx.io/api/definitions?domain=fi&page=1&size=1\"\n    },\n    {\n      \"rel\": \"last\",\n      \"href\": \"http://definitions.ausdx.io/api/definitions?domain=fi&page=6338&size=1\"\n    },\n    {\n      \"rel\": \"self\",\n      \"href\": \"http://definitions.ausdx.io/api/definitions?domain=fi&page=1&size=1\"\n    },\n    {\n      \"rel\": \"next\",\n      \"href\": \"http://definitions.ausdx.io/api/definitions?domain=fi&page=2&size=1\"\n    }\n  ],\n  \"id\": {\n    \"rel\": \"self\",\n    \"href\": \"http://definitions.ausdx.io/api/definitions?domain=fi&page=1&size=1\"\n  }\n}\n```\n\n","# Details\n\nThe details of a definition can be found at this URL:\n\n> https://definitions.ausdx.io/api/definition/{domain}/{id}\n\n\nThe `domain` URL parameter specifies a domain the definition is in.\n\nMore information about domains, and the values the parameter takes is [here](Domains).\n\nThe `id` URL parameter specifies the unique id, within a domain, for the definition.\n\n\nThe results of the details service look like this:\n\n```json\n{\n  \"content\": {\n    \"name\": \"Electronic Contact Facsimile Area Code\",\n    \"domain\": \"Other\",\n    \"status\": \"Standard\",\n    \"definition\": \"This element describes a standard Australian Area Code as used in conjunction with facsimile numbers.\",\n    \"guidance\": \"\",\n    \"identifier\": \"https://definitions.ausdx.io/definition/otherde10\",\n    \"usage\": [\n      \"Australian Taxation Office\",\n      \"NSW Office of Revenue\",\n      \"SA Office of Revenue\",\n      \"VIC Office of Revenue\"\n    ],\n    \"type\": \"string\",\n    \"values\": [\n      \n    ],\n    \"facets\": {\n      \"pattern\": \"[0-9]{2}\"\n    }\n  },\n  \"links\": [\n    {\n      \"rel\": \"syntax\",\n      \"href\": \"http://ausdx.io/api/syntax/other/de10\"\n    }\n  ]\n}\n```\n\n## Finding ids\n\n\n\nEach result from the search or browse serviecs includes all the details of a definition.\n\nIf you want to call the detail service anyway, you can use the definition's `identifier` field.\n\nThis URL is for the web version - if you want the API version, insert /api before /definition/ (eg: http://definitions.ausdx.io/api/definition/other/de10):\n\neg: \n```json\n\"content\": {\n        \"name\": \"Electronic Contact Facsimile Area Code\",\n        \"domain\": \"Other\",\n        \"status\": \"Standard\",\n        \"definition\": \"This element describes a standard Australian Area Code as used in conjunction with facsimile numbers.\",\n        \"guidance\": \"\",\n\n       --->  \"identifier\": \"http://definitions.ausdx.io/definition/other/de10\",\n\n        \"usage\": [\n          \"Australian Taxation Office\",\n          \"NSW Office of Revenue\",\n          \"SA Office of Revenue\",\n          \"VIC Office of Revenue\"\n        ],\n        \"type\": \"string\",\n        \"values\": [\n          \n        ],\n        \"facets\": {\n          \"pattern\": \"[0-9]{2}\"\n        }\n      },\n      \"links\": [\n        {\n          \"rel\": \"syntax\",\n          \"href\": \"http://ausdx.io/api/syntax/other/de10\"\n        }\n      ]\n    }\n```\n\n## Syntax specific metadata\n\nSome definitions have metadata for specific technologies.\n\nThe metadata service is at this URL:\n\n> https://definitions.ausdx.io/api/syntax/{domain}/{id}\n\n\nThe syntax URL for every definition is included in the HATEOS links in the search, browse and detail services.\n\n\nThe results from the syntax service look like:\n\n```json\n{\n  \"syntaxes\": {\n    \"xbrl\": {\n      \"period\": \"duration\",\n      \"classification\": \"py/pyde/pyde.02.00\"\n    }\n  }\n}\n```\n\nThe fields will vary based on the syntax, but we believe they will always be key:value pairs.\n\n","# Domains\n\nThe set of current domains is available here:\n\n>http://definitions.ausdx.io/api/domains\n\nIt returns something like this:\n\n```json\n[\n  {\n    \"name\": \"Other\",\n    \"acronym\": \"other\",\n    \"version\": \"2017.02.81\"\n  },\n  {\n    \"name\": \"Financial Statistics\",\n    \"acronym\": \"fs\",\n    \"version\": \"2017.02.81\"\n  },\n  {\n    \"name\": \"Financial Insolvency\",\n    \"acronym\": \"fi\",\n    \"version\": \"2018-01-10_09:42\"\n  }\n]\n```\n\n\nThis API uses the `acronym` field when passing domains as parameteres.\n\n"]}]
